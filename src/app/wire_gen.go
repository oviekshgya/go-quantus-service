// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"go-quantus-service/engine/controller"
	"go-quantus-service/engine/service"
	"go-quantus-service/src/db"
	"go-quantus-service/src/rabbitMQ"
	"go-quantus-service/src/redis"
	"go-quantus-service/src/repository"
)

import (
	_ "go-quantus-service/src/config"
)

// Injectors from injector.go:

func InitializeUserController() (controller.UserController, error) {
	gormDB := db.GetDB()
	repositoryUser := repository.NewUSerRepository()
	rabbitMQImpl := rabbitMQ.NewRabbitMQConnection()
	redisClient := redis.NewRedisClient()
	userService := service.NewUserService(gormDB, repositoryUser, rabbitMQImpl, redisClient)
	userController := controller.NewUserController(userService)
	return userController, nil
}

func InitializeContentController() (controller.ContentController, error) {
	gormDB := db.GetDB()
	repositoryContent := repository.NewContentRepository()
	rabbitMQImpl := rabbitMQ.NewRabbitMQConnection()
	redisClient := redis.NewRedisClient()
	contentSerivce := service.NewContentService(gormDB, repositoryContent, rabbitMQImpl, redisClient)
	contentController := controller.NewContentController(contentSerivce)
	return contentController, nil
}
